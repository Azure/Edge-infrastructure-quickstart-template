#!/bin/bash
set -e

echo "Generating deployment pipeline"

stages=("dev" "qa" "prod")

groupTemplate='
    {{.GroupName}}:
        uses: ./.github/workflows/site-cd-workflow.yml
        with:
            working-directory: {{.Stage}}/{{.GroupName}}
        secrets: inherit
        needs: [{{.Stage}}]
'

stageTemplate='
    {{.Stage}}:
        name: {{.Stage}}
        needs: [{{.GroupList}}]
        runs-on: ubuntu-latest
        steps:
         - run: echo "running {{.Stage}} stage"
'

workflow='
name: Terraform apply infra change

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
'
backendTemplate=$(<.azure/backendTemplate.tf)
  
for count in "${!stages[@]}"; do
    stage=${stages[$count]}

    if [ $count -eq 0 ]; then
        stagejob=$(echo "$stageTemplate" | sed "s/{{.Stage}}/$stage/g" | grep -v 'needs: \[.*\]')
        workflow+="$stagejob"
    else
        groupList=${stages[$count-1]}
        pushd ./${stages[$count-1]} > /dev/null
        for d in */ ; do
            if [[ $d == "*/" ]]; then
                break
            fi
            group=$(echo "$d" | sed 's/\///g' | sed 's/ /_/g')
            groupList="$groupList,$group"
        done
        stagejob=$(echo "$stageTemplate" | sed "s/{{.Stage}}/$stage/g" | sed "s/{{.GroupList}}/$groupList/g")
        workflow+="$stagejob"
        popd > /dev/null
    fi

    pushd ./$stage > /dev/null
    for d in */ ; do
        if [[ $d == "*/" ]]; then
            break
        fi
        group=$(echo "$d" | sed 's/\///g' | sed 's/ /_/g')
        groupjob=$(echo "$groupTemplate" | sed "s/{{.GroupName}}/$group/g" | sed "s/{{.Stage}}/$stage/g")
        workflow+="$groupjob"

        #generate backend config file
        backendConfigFile="./${group}/backend.tf"
        echo $backendConfigFile
        echo "$backendTemplate" | sed "s/{{.GroupName}}/$group/g" > "$backendConfigFile"
        git add $backendConfigFile
    done
    popd > /dev/null
done

# create a workflow file
workflowfile="./.github/workflows/deploy-infra.yml"
if [ -f "$workflowfile" ]; then
    rm "$workflowfile"
fi  
echo "$workflow" > "$workflowfile"
git add $workflowfile

echo "Generated deployment pipeline"
